############################################################################
# REOBack - settings.conf
# $Id$
############################################################################
#
# REOBack Simple Backup Solution
# http://sourceforge.net/projects/reoback/
#
# Copyright (c) 2001, 2002 Randy Oyarzabal (techno91<at>users.sourceforge.net)
#
# Other developers and contributors:
#	 Andy Swanner	   (andys6276<at>users.sourceforge.net)
#  Richard Griswold  (griswold<at>users.sourceforge.net)
#  Nate Steffenhagen (frankspikoli<at>users.sourceforge.net)
#	 Anthony L. Awtrey, SCP Patch
#  Christian John (post@john-softwareentwicklung), Retention
############################################################################
#
# This is the configuration file for REOBack.  Note that the default
# configuration file is "settings.cfg".  However, you can create your own
# configuration file and pass it as a parameter to the backup program. 
# i.e. "./reoback.pl <configfile>"

# Used only as an identifier for this backup. Normally the hostname.
host            = UNKNOWN

# This is the number of days you want to keep backups.  Note that the 
# actual number of archives kept is "backupdays" times 2.  That way, when 
# it comes time for auto deletion, you always have a history of 
# "backupdays" worth of information.
backupdays  	= 7

# Retention
# Number of backup cycles to retain
# Keeps retention x backupdays as full backup / icrementalbackup, deletes oldest retention
retention = 3

# Definitions of files/directories to backup.  See README for format of
# this file.  
files		= /etc/reoback/files.conf

# Directory to store temporary files generated by REOBack.
tmpdir		= /var/lib/reoback/tmp/

# Directory to store data files generated by REOBack.  Files created
# here are files used to keep track of FULL/INCREMENTAL backups.
datadir		= /var/lib/reoback/data/

# Location of where to keep local backups.  Also use as a temporary 
# storage of archives for transfer. Keep trailing slash!
localbackup	= /var/lib/reoback/backups/

# 1 = Keep local backups, 0 = Do not keep local backups
keeplocalcopy	= 1

# 1 = Transfer to remote location, 0 = Do not transfer
remotebackup	= 0

# Type of remote backup. FTP, NFS, SMB, or SCP
# NOTE: When using SCP, REOBack will NOT do auto-deletions of old
# backup files.  Keep this mind.  This is a limitation on the SCP module.
rbackuptype	= SCP

# Only needed if above is set to NFS or SMB. Keep trailing slash!
localmount	= /mnt/server/

# Required if "remotebackup" is set.
remotehost	= remoteshost.com

# Path to keep backups on remote host. Keep trailing slash!
remotepath	= /path_here/

# Remote user on remote host. Required for FTP or SCP.
remoteuser		= userhere

# Password for FTP remote user only.
# SCP uses password-less logins. See doc/SCP-INFO.
remotepasswd	= password

##########################################################################
# ADVANCED SETTINGS, leave these w/ default values unless you understand 
#   what you are doing.

# Tar command depending on your version of tar.
# This is particularly useful if you are running on a different flavor
# of Unix such as BSD, MacOSX, Linux etc.
tarcommand = tar -cpzf

# Tar file-list command option
tarfileincl = -T

# Tar file-list exclusion option
tarfileexcl = -X

# NFS mount command
nfscommand = mount -o rw,soft,intr,wsize=8192,rsize=8192

# Samba mount command
smbcommand = mount -t smbfs -o

# 1 = Use Log4perl, 0 = Use console/screen only.
# If enabled, Log::Log4perl will be required for logging, if the module 
# is not found, this will automatically be turned off, and console 
# logging will take over.
uselog4perl = 0

# If not using Log4perl, this need to be set as desired.  The priorities 
# available are the same as log4perl: TRACE, DEBUG, INFO, WARN, ERROR, FATAL
# Suggested default is: WARN or ERROR
consolepriority = WARN

# Log4perl config file
log4perlconfig = /etc/reoback/log4perl.conf

# 0 = Turn off screen prints (quiet); 1 = Turn on screen prints (verbose)
# Note that even if the screen prints are disabled, the logging defined
# above will take priority.  So, messages may not print to the screen if
# log4perl is being used, but the log file will still be written.  This 
# is useful for quiet runs so cron doesn't send an email output if desired.
# Also note that error messages and warnings will always print to the console.
screenprintsenabled = 1

