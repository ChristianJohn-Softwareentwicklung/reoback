############################################################################
# REOBack - files.conf
# $Id$
############################################################################
#
# REOBack Simple Backup Solution
# http://sourceforge.net/projects/reoback/
#
# Copyright (c) 2001, 2002 Randy Oyarzabal (techno91<at>users.sourceforge.net)
#
# Other developers and contributors:
#	 Andy Swanner	   (andys6276<at>users.sourceforge.net)
#    Richard Griswold  (griswold<at>users.sourceforge.net)
#    Nate Steffenhagen (frankspikoli<at>users.sourceforge.net)
#	 Anthony L. Awtrey, SCP Patch
############################################################################
#
# This is a list of random files or directories that need to be
# archived as one big tar file.  These files will also be selectively
# picked depending on a FULL or incremental backup.

# Comments must start with a "#" as shown
############################################################################

# The following is an example with comments, below it is again without

# 'File:' followed by the name of the tar file that will be created
# Note that we don't include a path as that is added in the settings.conf
# File: TestFile1

# Simply list all directories to be recursively backed up (1 per line)
# /home/sforge

# 'Skip:' followed by any subdirectories you want not to be included
#	  from the above backup directory  
# Skip: /home/sforge/backups
# Skip: /home/sforge/reoback/data

# Note: You can use Perl regular expressions (wild cards) for Skip: For
# example, to skip all files and directories in your home directory that
# start with a dot, you can use:
#
# Skip: /home/myself/\..*
#
# Wondering what '\..*' does?  The leading backslash, '/', tells REOBack
# (actually Perl) to treat the next dot, '.', as a literal dot.  The
# third dot tells Perl to match any character, and the asterisk, '*',
# tells Perl to perform the match zero or more times.

# For files to be completely recursively backed up, don't use the 'Skip'
# option.  Simple, huh?
# /etc
# /home/frank

# Note we are starting a new backup file, but don't need to mark the close
# of the previous one
# File: TestFile2
# /var/www/html

# Note we can also include seperate files, not just directories
# /var/www/docs/hugedoc.txt

File: Home
/home/techno
Skip: /home/techno/reoback-dev

File: TestFile1
/home/techno/test1

File: TestFile2
/home/techno/test2

File: REOBACK
/home/techno/reoback-dev
Skip: /home/techno/reoback-dev/backups
